{
    "type": [
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        2,
        3,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        0,
        1,
        2,
        2,
        0,
        1,
        2,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        2,
        2,
        2,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        2,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        3,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        3,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        3,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        3,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        3,
        2,
        3,
        3,
        2,
        0,
        2
    ],
    "data": [
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"",
        "\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n[1] \"numeric\"\n",
        "> ",
        "cumRast <- function(x,dates,step,get = 'all'){",
        "+ ",
        "    NAasZero = TRUE",
        "+ ",
        "    ",
        "+ ",
        "   #x <- as.vector(x)",
        "+ ",
        "   # index for the pixel where are values (not NA)",
        "+ ",
        "   years = max(unique(lubridate::year(dates)))-min(unique(lubridate::year(dates)))+1",
        "+ ",
        "   sos <- x[1]",
        "+ ",
        "   eos <- x[2]",
        "+ ",
        "   x <- x[3:length(x)]",
        "+ ",
        "   nl <- length(x)",
        "+ ",
        "   ",
        "+ ",
        "  #dates of the MOD13 product between 2000 and 2002",
        "+ ",
        "  times <- round(365/step)",
        "+ ",
        "  dates2s <- as.vector(sapply(2002:2004,function(year) seq(as.Date(paste0(year,\"-01-01\")),as.Date(paste0(year,\"-12-31\")),by=step)))",
        "+ ",
        "  indGS <- intersect(which(dates2s >= sos),which(dates2s + step <= eos))",
        "+ ",
        "  indAll <- matrix(sapply(0:(years-1),function(l) indGS+times*l),ncol=years)",
        "+ ",
        "  cRaster <- rep(NA, length(x))",
        "+ ",
        "",
        "+ ",
        "  if (all(!is.na(as.numeric(indAll)))){",
        "+ ",
        "    # indAll[which(indAll[,years-1] > nl),years-1] <- NA",
        "+ ",
        "    # indAll[which(indAll[,years] > nl),years] <- NA",
        "+ ",
        "    indAll[indAll > nl] <- NA",
        "+ ",
        "    isc <- as.numeric(indAll)",
        "+ ",
        "    isc <- isc[!is.na(isc)]",
        "+ ",
        "",
        "+ ",
        "    if (NAasZero){ #wsto hay que modificarlo solo resulve un caso especifico",
        "+ ",
        "      x[x > 32700] <- 0",
        "+ ",
        "      x[is.na(x)] <- 0",
        "+ ",
        "    }",
        "+ ",
        "    cRaster[isc] <- as.numeric(apply(indAll,2,FUN=function(ix) cumsum(x[ix])))[1:length(isc)]",
        "+ ",
        "  }",
        "+ ",
        "  ",
        "+ ",
        "    if (get[1] == 'eos'){",
        "+ ",
        "      y <- as.numeric(get[2])",
        "+ ",
        "      cRaster <- cRaster[as.numeric(indAll[,y])]",
        "+ ",
        "    }",
        "+ ",
        "  return(cRaster)",
        "+ ",
        "}",
        "> ",
        "cl <- makeCluster(11,\"SOCK\")",
        "> ",
        "  eoscNDVI <- st_apply(esNDVI,1:2,cumRast,dates = dates, step = 16, get = c('eos',21),CLUSTER = cl,PROGRESS = TRUE,.fname = 'dates')",
        "\r  |                                                  | 0 % ~calculating  \r  |+                                                 | 1 % ~01m 24s      \r  |+                                                 | 2 % ~01m 14s      \r  |++                                                | 3 % ~01m 10s      \r  |++                                                | 4 % ~01m 07s      \r  |+++                                               | 5 % ~01m 05s      \r  |+++                                               | 6 % ~01m 04s      ",
        "\r  |++++                                              | 7 % ~01m 03s      \r  |++++                                              | 8 % ~01m 02s      \r  |+++++                                             | 9 % ~01m 01s      \r  |+++++                                             | 10% ~59s          \r  |++++++                                            | 11% ~58s          \r  |++++++                                            | 12% ~58s          \r  |+++++++                                           | 13% ~57s          ",
        "\r  |+++++++                                           | 14% ~56s          \r  |++++++++                                          | 15% ~55s          \r  |++++++++                                          | 16% ~54s          \r  |+++++++++                                         | 17% ~53s          \r  |+++++++++                                         | 18% ~53s          \r  |++++++++++                                        | 19% ~52s          \r  |++++++++++                                        | 20% ~51s          ",
        "\r  |+++++++++++                                       | 21% ~51s          \r  |+++++++++++                                       | 22% ~50s          \r  |++++++++++++                                      | 23% ~49s          \r  |++++++++++++                                      | 24% ~48s          \r  |+++++++++++++                                     | 25% ~48s          \r  |+++++++++++++                                     | 26% ~47s          \r  |++++++++++++++                                    | 27% ~46s          ",
        "\r  |++++++++++++++                                    | 28% ~45s          \r  |+++++++++++++++                                   | 29% ~45s          \r  |+++++++++++++++                                   | 30% ~44s          \r  |++++++++++++++++                                  | 31% ~43s          \r  |++++++++++++++++                                  | 32% ~43s          \r  |+++++++++++++++++                                 | 33% ~42s          \r  |+++++++++++++++++                                 | 34% ~41s          ",
        "\r  |++++++++++++++++++                                | 35% ~41s          \r  |++++++++++++++++++                                | 36% ~40s          \r  |+++++++++++++++++++                               | 37% ~40s          \r  |+++++++++++++++++++                               | 38% ~39s          \r  |++++++++++++++++++++                              | 39% ~38s          \r  |++++++++++++++++++++                              | 40% ~38s          \r  |+++++++++++++++++++++                             | 41% ~37s          ",
        "\r  |+++++++++++++++++++++                             | 42% ~37s          \r  |++++++++++++++++++++++                            | 43% ~36s          \r  |++++++++++++++++++++++                            | 44% ~35s          \r  |+++++++++++++++++++++++                           | 45% ~35s          \r  |+++++++++++++++++++++++                           | 46% ~34s          \r  |++++++++++++++++++++++++                          | 47% ~34s          \r  |++++++++++++++++++++++++                          | 48% ~33s          ",
        "\r  |+++++++++++++++++++++++++                         | 49% ~32s          \r  |+++++++++++++++++++++++++                         | 50% ~32s          \r  |++++++++++++++++++++++++++                        | 51% ~31s          \r  |++++++++++++++++++++++++++                        | 52% ~30s          \r  |+++++++++++++++++++++++++++                       | 53% ~30s          \r  |+++++++++++++++++++++++++++                       | 54% ~29s          \r  |++++++++++++++++++++++++++++                      | 55% ~28s          ",
        "\r  |++++++++++++++++++++++++++++                      | 56% ~28s          \r  |+++++++++++++++++++++++++++++                     | 57% ~27s          \r  |+++++++++++++++++++++++++++++                     | 58% ~26s          \r  |++++++++++++++++++++++++++++++                    | 59% ~26s          \r  |++++++++++++++++++++++++++++++                    | 60% ~25s          \r  |+++++++++++++++++++++++++++++++                   | 61% ~25s          \r  |+++++++++++++++++++++++++++++++                   | 62% ~24s          ",
        "\r  |++++++++++++++++++++++++++++++++                  | 63% ~23s          \r  |++++++++++++++++++++++++++++++++                  | 64% ~23s          \r  |+++++++++++++++++++++++++++++++++                 | 65% ~22s          \r  |+++++++++++++++++++++++++++++++++                 | 66% ~21s          \r  |++++++++++++++++++++++++++++++++++                | 67% ~21s          \r  |++++++++++++++++++++++++++++++++++                | 68% ~20s          \r  |+++++++++++++++++++++++++++++++++++               | 69% ~19s          ",
        "\r  |+++++++++++++++++++++++++++++++++++               | 70% ~19s          \r  |++++++++++++++++++++++++++++++++++++              | 71% ~18s          \r  |++++++++++++++++++++++++++++++++++++              | 72% ~17s          \r  |+++++++++++++++++++++++++++++++++++++             | 73% ~17s          \r  |+++++++++++++++++++++++++++++++++++++             | 74% ~16s          \r  |++++++++++++++++++++++++++++++++++++++            | 75% ~16s          \r  |++++++++++++++++++++++++++++++++++++++            | 76% ~15s          ",
        "\r  |+++++++++++++++++++++++++++++++++++++++           | 77% ~14s          \r  |+++++++++++++++++++++++++++++++++++++++           | 78% ~14s          \r  |++++++++++++++++++++++++++++++++++++++++          | 79% ~13s          \r  |++++++++++++++++++++++++++++++++++++++++          | 80% ~12s          \r  |+++++++++++++++++++++++++++++++++++++++++         | 81% ~12s          \r  |+++++++++++++++++++++++++++++++++++++++++         | 82% ~11s          \r  |++++++++++++++++++++++++++++++++++++++++++        | 83% ~11s          ",
        "\r  |++++++++++++++++++++++++++++++++++++++++++        | 84% ~10s          \r  |+++++++++++++++++++++++++++++++++++++++++++       | 85% ~09s          \r  |+++++++++++++++++++++++++++++++++++++++++++       | 86% ~09s          \r  |++++++++++++++++++++++++++++++++++++++++++++      | 87% ~08s          \r  |++++++++++++++++++++++++++++++++++++++++++++      | 88% ~07s          \r  |+++++++++++++++++++++++++++++++++++++++++++++     | 89% ~07s          \r  |+++++++++++++++++++++++++++++++++++++++++++++     | 90% ~06s          ",
        "\r  |++++++++++++++++++++++++++++++++++++++++++++++    | 91% ~06s          \r  |++++++++++++++++++++++++++++++++++++++++++++++    | 92% ~05s          \r  |+++++++++++++++++++++++++++++++++++++++++++++++   | 93% ~04s          \r  |+++++++++++++++++++++++++++++++++++++++++++++++   | 94% ~04s          \r  |++++++++++++++++++++++++++++++++++++++++++++++++  | 95% ~03s          \r  |++++++++++++++++++++++++++++++++++++++++++++++++  | 96% ~02s          \r  |+++++++++++++++++++++++++++++++++++++++++++++++++ | 97% ~02s          ",
        "\r  |+++++++++++++++++++++++++++++++++++++++++++++++++ | 98% ~01s          \r  |++++++++++++++++++++++++++++++++++++++++++++++++++| 99% ~01s          \r  |++++++++++++++++++++++++++++++++++++++++++++++++++| 100% elapsed=01m 02s\n",
        "> ",
        "  stopCluster(cl)",
        "> ",
        "eoscNDVI",
        "stars object with 2 dimensions and 1 attribute\nattribute(s):\n",
        "Error in (function (..., row.names = NULL, check.rows = FALSE, check.names = TRUE,  : \n  arguments imply differing number of rows: 1, 7, 6, 5, 9, 8, 14, 13, 12, 11, 10, 15, 4, 16, 22, 3, 2, 17, 20, 19, 21\n",
        "> ",
        "x",
        "  [1] 3082.287 2868.329 2654.370 2440.412 2226.453 2012.495 1930.446 1848.397 1766.348 1684.299 1602.250\n [12] 1544.876 1487.502 1430.129 1372.755 1315.381 1412.646 1509.912 1607.178 1704.443 1801.709 2236.611\n [23] 2671.513 3106.416 3541.318 3976.220 3770.282 3564.344 3358.406 3152.469 2946.531 2793.982 2641.433\n [34] 2488.884 2336.335 2183.787 2183.780 2183.773 2183.766 2183.759 2183.752 2196.506 2209.260 2222.014\n [45] 2234.768 2247.522 2237.342 2227.162 2216.982 2206.802 2196.623 2079.489 1962.356 1845.223",
        " 1728.090\n [56] 1610.957 1596.256 1581.556 1566.856 1552.155 1537.455 1637.128 1736.802 1836.476 1936.149 2035.823\n [67] 2345.708 2655.593 2965.478 3275.363 3585.248 3318.318 3051.388 2784.458 2517.528 2250.598 2157.766\n [78] 2064.934 1972.103 1879.271 1786.439 1747.446 1708.452 1669.459 1630.466 1591.473 1831.221 2070.970\n [89] 2310.719 2550.468 2790.216 2749.218 2708.220 2667.222 2626.224 2585.226 2413.021 2240.816 2068.611\n[100] 1896.407 1724.202 1681.440 1638.677 1595.915 1553.153 1510.391 1507.184 1503.977",
        " 1500.770 1497.563\n[111] 1494.356 2004.835 2515.314 3025.793 3536.272 4046.751 3643.016 3239.281 2835.546 2431.811 2028.076\n[122] 1963.415 1898.754 1834.094 1769.433 1704.772 1670.944 1637.117 1603.289 1569.461 1535.634 1642.967\n[133] 1750.300 1857.633 1964.966 2072.299 2361.367 2650.434 2939.502 3228.569 3517.637 3196.779 2875.922\n[144] 2555.064 2234.207 1913.349 1877.390 1841.432 1805.473 1769.514 1733.555 1727.061 1720.566 1714.071\n[155] 1707.577 1701.082 1860.590 2020.097 2179.604 2339.112 2498.619 2460.435",
        " 2422.251 2384.067 2345.882\n[166] 2307.698 2182.271 2056.844 1931.417 1805.990 1680.563 1654.200 1627.836 1601.472 1575.108 1548.744\n[177] 1592.872 1637.000 1681.128 1725.255 1769.383 2063.323 2357.263 2651.204 2945.144 3239.084 2979.507\n[188] 2719.930 2460.353 2200.776 1941.199 1872.164 1803.129 1734.094 1665.058 1596.023 1572.543 1549.063\n[199] 1525.583 1502.103 1478.623 1666.653 1854.683 2042.714 2230.744 2418.774 2423.571 2428.368 2433.165\n[210] 2437.962 2442.760 2294.304 2145.848 1997.392 1848.936 1700.480",
        " 1646.399 1592.317 1538.235 1484.153\n[221] 1430.071 1519.361 1608.650 1697.940 1787.229 1876.518 2122.615 2368.711 2614.807 2860.904 3107.000\n[232] 2888.155 2669.311 2450.466 2231.622 2012.777 1929.350 1845.924 1762.497 1679.070 1595.643 1577.600\n[243] 1559.558 1541.515 1523.473 1505.430 1569.219 1633.008 1696.796 1760.585 1824.373 2020.091 2215.809\n[254] 2411.527 2607.245 2802.962 2690.071 2577.180 2464.288 2351.397 2238.505 2138.792 2039.079 1939.366\n[265] 1839.653 1739.939 1693.002 1646.064 1599.127 1552.190",
        " 1505.252 1921.519 2337.785 2754.052 3170.319\n[276] 3586.585 3510.503 3434.421 3358.338 3282.256 3206.174 3016.229 2826.285 2636.341 2446.397 2256.453\n[287] 2178.742 2101.032 2023.321 1945.611 1867.900 1955.691 2043.482 2131.273 2219.063 2306.854 2534.659\n[298] 2762.464 2990.269 3218.074 3445.879 3158.867 2871.855 2584.844 2297.832 2010.820 1951.964 1893.108\n[309] 1834.253 1775.397 1716.541 1756.574 1796.608 1836.641 1876.674 1916.708 2127.522 2338.336 2549.150\n[320] 2759.964 2970.778 2858.469 2746.159 2633.850",
        " 2521.541 2409.232 2289.501 2169.770 2050.039 1930.309\n[331] 1810.578 1814.706 1818.834 1822.961 1827.089 1831.217 1812.246 1793.275 1774.305 1755.334 1736.363\n[342] 1973.471 2210.578 2447.686 2684.793 2921.901 2859.565 2797.230 2734.894 2672.559 2610.223 2450.502\n[353] 2290.780 2131.058 1971.336 1811.615 1794.079 1776.543 1759.007 1741.472 1723.936 1752.746 1781.557\n[364] 1810.367 1839.178 1867.988 1958.293 2048.598 2138.902 2229.207 2319.512 2184.083 2048.654 1913.225\n[375] 1777.796 1642.367 1606.480 1570.593",
        " 1534.706 1498.819 1462.932 1456.710 1450.489 1444.268 1438.046\n[386] 1431.825 1565.403 1698.981 1832.560 1966.138 2099.716 2096.711 2093.707 2090.702 2087.697 2084.693\n[397] 1985.854 1887.014 1788.175 1689.336 1590.497 1586.276 1582.055 1577.834 1573.613 1569.392 1588.959\n[408] 1608.525 1628.091 1647.657 1667.224 1824.912 1982.601 2140.289 2297.978 2455.667 2398.736 2341.805\n[419] 2284.875 2227.944 2171.013 2089.400 2007.786 1926.173 1844.560 1762.946 1738.223 1713.499 1688.776\n[430] 1664.052 1639.329 1776.460",
        " 1913.591 2050.721 2187.852 2324.983 2464.488 2603.992 2743.497 2883.001\n[441] 3022.505 2819.852 2617.198 2414.545 2211.891 2009.238 1968.956 1928.675 1888.393 1848.112 1807.830\n[452] 1897.501 1987.172 2076.843 2166.514 2256.185 2183.807 2111.430 2039.052 1966.675 1894.297 1907.379\n[463] 1920.460 1933.541 1946.623 1959.704 1889.707 1819.710 1749.712 1679.715 1609.718 1611.040 1612.363\n[474] 1613.686 1615.008 1616.331 1630.086 1643.841 1657.596 1671.351 1685.106 1772.211 1859.315 1946.420\n[485] 2033.524 2120.629",
        " 2032.151 1943.673 1855.196 1766.718 1678.240 1663.294 1648.348 1633.402 1618.456\n[496] 1603.510 1585.357 1567.204 1549.051 1530.898 1512.745 1879.203 2245.662 2612.120 2978.579 3345.037\n[507] 3349.665 3354.292 3358.919 3363.546\n",
        "> ",
        "x <- as.numeric(esNDVI$values[3000,100,])",
        "> ",
        "   #x <- as.vector(x)",
        "> ",
        "   # index for the pixel where are values (not NA)",
        "> ",
        "   years = max(unique(lubridate::year(dates)))-min(unique(lubridate::year(dates)))+1",
        "> ",
        "   sos <- x[1]",
        "> ",
        "   eos <- x[2]",
        "> ",
        "   x <- x[3:length(x)]",
        "> ",
        "   nl <- length(x)",
        "> ",
        "  #dates of the MOD13 product between 2000 and 2002",
        "> ",
        "  times <- round(365/step)",
        "> ",
        "  dates2s <- as.vector(sapply(2002:2004,function(year) seq(as.Date(paste0(year,\"-01-01\")),as.Date(paste0(year,\"-12-31\")),by=step)))",
        "> ",
        "  indGS <- intersect(which(dates2s >= sos),which(dates2s + step <= eos))",
        "> ",
        "  indAll <- matrix(sapply(0:(years-1),function(l) indGS+times*l),ncol=years)",
        "> ",
        "  cRaster <- rep(NA, length(x))",
        "> ",
        "    # indAll[which(indAll[,years-1] > nl),years-1] <- NA",
        "> ",
        "    # indAll[which(indAll[,years] > nl),years] <- NA",
        "> ",
        "    indAll[indAll > nl] <- NA",
        "> ",
        "    isc <- as.numeric(indAll)",
        "> ",
        "    isc <- isc[!is.na(isc)]",
        "> ",
        "indAll",
        "     [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11] [,12] [,13] [,14] [,15] [,16] [,17] [,18] [,19]\n[1,]   24   47   70   93  116  139  162  185  208   231   254   277   300   323   346   369   392   415   438\n[2,]   25   48   71   94  117  140  163  186  209   232   255   278   301   324   347   370   393   416   439\n[3,]   26   49   72   95  118  141  164  187  210   233   256   279   302   325   348   371   394   417   440\n[4,]   27   50   73   96  119  142  165  188  211   234   257   280   303",
        "   326   349   372   395   418   441\n[5,]   28   51   74   97  120  143  166  189  212   235   258   281   304   327   350   373   396   419   442\n[6,]   29   52   75   98  121  144  167  190  213   236   259   282   305   328   351   374   397   420   443\n[7,]   30   53   76   99  122  145  168  191  214   237   260   283   306   329   352   375   398   421   444\n     [,20] [,21] [,22] [,23]\n[1,]   461   484   507    NA\n[2,]   462   485   508    NA\n[3,]   463   486   509    NA\n[4,]   464   487   510    NA\n[5,]",
        "   465   488    NA    NA\n[6,]   466   489    NA    NA\n[7,]   467   490    NA    NA\n",
        "> ",
        "isc",
        "  [1]  24  25  26  27  28  29  30  47  48  49  50  51  52  53  70  71  72  73  74  75  76  93  94  95  96  97\n [27]  98  99 116 117 118 119 120 121 122 139 140 141 142 143 144 145 162 163 164 165 166 167 168 185 186 187\n [53] 188 189 190 191 208 209 210 211 212 213 214 231 232 233 234 235 236 237 254 255 256 257 258 259 260 277\n [79] 278 279 280 281 282 283 300 301 302 303 304 305 306 323 324 325 326 327 328 329 346 347 348 349 350 351\n[105] 352 369 370 371 372 373 374 375 392 393 394 395 396 397 398 415 416",
        " 417 418 419 420 421 438 439 440 441\n[131] 442 443 444 461 462 463 464 465 466 467 484 485 486 487 488 489 490 507 508 509 510\n",
        "> ",
        "apply(indAll,2,FUN=function(ix) cumsum(x[ix]))",
        "          [,1]      [,2]      [,3]      [,4]      [,5]      [,6]      [,7]      [,8]      [,9]     [,10]\n[1,]  3106.416  2237.342  3275.363  2708.220  4046.751  2939.502  2460.435  2945.144  2428.368  3107.000\n[2,]  6647.734  4464.504  6860.611  5375.442  7689.767  6168.071  4882.686  6184.228  4861.533  5995.155\n[3,] 10623.954  6681.487 10178.928  8001.666 10929.048  9685.708  7266.752  9163.735  7299.496  8664.466\n[4,] 14394.237  8888.289 13230.316 10586.891 13764.594 12882.487  9612.635 11883.665  9742.255",
        " 11114.933\n[5,] 17958.581 11084.912 16014.774 12999.912 16196.405 15758.408 11920.333 14344.019 12036.559 13346.555\n[6,] 21316.987 13164.401 18532.302 15240.729 18224.481 18313.473 14102.604 16544.795 14182.407 15359.332\n[7,] 24469.456 15126.758 20782.901 17309.340 20187.897 20547.679 16159.448 18485.995 16179.799 17288.683\n         [,11]     [,12]     [,13]     [,14]     [,15]     [,16]     [,17]     [,18]     [,19]     [,20]\n[1,]  2411.527  3510.503  3218.074  2746.159  2921.901  2138.902  2096.711  2297.978",
        "  2603.992  1894.297\n[2,]  5018.771  6944.923  6663.953  5380.010  5781.466  4368.110  4190.418  4753.645  5347.489  3801.676\n[3,]  7821.734 10303.262  9822.820  7901.550  8578.696  6687.622  6281.120  7152.381  8230.490  5722.136\n[4,] 10511.804 13585.517 12694.676 10310.782 11313.590  8871.705  8368.817  9494.186 11252.995  7655.677\n[5,] 13088.984 16791.691 15279.520 12600.283 13986.149 10920.359 10453.510 11779.061 14072.847  9602.300\n[6,] 15553.272 19807.920 17577.351 14770.053 16596.372 12833.584 12439.363",
        " 14007.004 16690.046 11562.004\n[7,] 17904.669 22634.206 19588.172 16820.092 19046.874 14611.380 14326.378 16178.018 19104.590 13451.711\n         [,21]     [,22] [,23]\n[1,]  1946.420  3349.665    NA\n[2,]  3979.944  6703.957    NA\n[3,]  6100.572 10062.876    NA\n[4,]  8132.723 13426.422    NA\n[5,] 10076.396        NA    NA\n[6,] 11931.592        NA    NA\n[7,] 13698.310        NA    NA\n",
        "> ",
        "    cRaster[isc] <- as.numeric(apply(indAll,2,FUN=function(ix) cumsum(x[ix])))[1:length(isc)]",
        "> ",
        "cRaster",
        "  [1]        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA\n [11]        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA\n [21]        NA        NA        NA  3106.416  6647.734 10623.954 14394.237 17958.581 21316.987 24469.456\n [31]        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA\n [41]        NA        NA        NA        NA        NA        NA  2237.342  4464.504  6681.487",
        "  8888.289\n [51] 11084.912 13164.401 15126.758        NA        NA        NA        NA        NA        NA        NA\n [61]        NA        NA        NA        NA        NA        NA        NA        NA        NA  3275.363\n [71]  6860.611 10178.928 13230.316 16014.774 18532.302 20782.901        NA        NA        NA        NA\n [81]        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA\n [91]        NA        NA  2708.220  5375.442  8001.666 10586.891 12999.912 15240.729",
        " 17309.340        NA\n[101]        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA\n[111]        NA        NA        NA        NA        NA  4046.751  7689.767 10929.048 13764.594 16196.405\n[121] 18224.481 20187.897        NA        NA        NA        NA        NA        NA        NA        NA\n[131]        NA        NA        NA        NA        NA        NA        NA        NA  2939.502  6168.071\n[141]  9685.708 12882.487 15758.408 18313.473 20547.679        NA        NA",
        "        NA        NA        NA\n[151]        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA\n[161]        NA  2460.435  4882.686  7266.752  9612.635 11920.333 14102.604 16159.448        NA        NA\n[171]        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA\n[181]        NA        NA        NA        NA  2945.144  6184.228  9163.735 11883.665 14344.019 16544.795\n[191] 18485.995        NA        NA        NA        NA        NA",
        "        NA        NA        NA        NA\n[201]        NA        NA        NA        NA        NA        NA        NA  2428.368  4861.533  7299.496\n[211]  9742.255 12036.559 14182.407 16179.799        NA        NA        NA        NA        NA        NA\n[221]        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA\n[231]  3107.000  5995.155  8664.466 11114.933 13346.555 15359.332 17288.683        NA        NA        NA\n[241]        NA        NA        NA        NA        NA",
        "        NA        NA        NA        NA        NA\n[251]        NA        NA        NA  2411.527  5018.771  7821.734 10511.804 13088.984 15553.272 17904.669\n[261]        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA\n[271]        NA        NA        NA        NA        NA        NA  3510.503  6944.923 10303.262 13585.517\n[281] 16791.691 19807.920 22634.206        NA        NA        NA        NA        NA        NA        NA\n[291]        NA        NA        NA        NA",
        "        NA        NA        NA        NA        NA  3218.074\n[301]  6663.953  9822.820 12694.676 15279.520 17577.351 19588.172        NA        NA        NA        NA\n[311]        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA\n[321]        NA        NA  2746.159  5380.010  7901.550 10310.782 12600.283 14770.053 16820.092        NA\n[331]        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA\n[341]        NA        NA        NA",
        "        NA        NA  2921.901  5781.466  8578.696 11313.590 13986.149\n[351] 16596.372 19046.874        NA        NA        NA        NA        NA        NA        NA        NA\n[361]        NA        NA        NA        NA        NA        NA        NA        NA  2138.902  4368.110\n[371]  6687.622  8871.705 10920.359 12833.584 14611.380        NA        NA        NA        NA        NA\n[381]        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA\n[391]        NA  2096.711",
        "  4190.418  6281.120  8368.817 10453.510 12439.363 14326.378        NA        NA\n[401]        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA\n[411]        NA        NA        NA        NA  2297.978  4753.645  7152.381  9494.186 11779.061 14007.004\n[421] 16178.018        NA        NA        NA        NA        NA        NA        NA        NA        NA\n[431]        NA        NA        NA        NA        NA        NA        NA  2603.992  5347.489  8230.490\n[441] 11252.995",
        " 14072.847 16690.046 19104.590        NA        NA        NA        NA        NA        NA\n[451]        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA\n[461]  1894.297  3801.676  5722.136  7655.677  9602.300 11562.004 13451.711        NA        NA        NA\n[471]        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA\n[481]        NA        NA        NA  1946.420  3979.944  6100.572  8132.723 10076.396 11931.592 13698.310",
        "\n[491]        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA\n[501]        NA        NA        NA        NA        NA        NA  3349.665  6703.957 10062.876 13426.422\n",
        "> ",
        "apply(indAll,2,FUN=function(ix) cumsum(x[ix]))",
        "          [,1]      [,2]      [,3]      [,4]      [,5]      [,6]      [,7]      [,8]      [,9]     [,10]\n[1,]  3106.416  2237.342  3275.363  2708.220  4046.751  2939.502  2460.435  2945.144  2428.368  3107.000\n[2,]  6647.734  4464.504  6860.611  5375.442  7689.767  6168.071  4882.686  6184.228  4861.533  5995.155\n[3,] 10623.954  6681.487 10178.928  8001.666 10929.048  9685.708  7266.752  9163.735  7299.496  8664.466\n[4,] 14394.237  8888.289 13230.316 10586.891 13764.594 12882.487  9612.635 11883.665  9742.255",
        " 11114.933\n[5,] 17958.581 11084.912 16014.774 12999.912 16196.405 15758.408 11920.333 14344.019 12036.559 13346.555\n[6,] 21316.987 13164.401 18532.302 15240.729 18224.481 18313.473 14102.604 16544.795 14182.407 15359.332\n[7,] 24469.456 15126.758 20782.901 17309.340 20187.897 20547.679 16159.448 18485.995 16179.799 17288.683\n         [,11]     [,12]     [,13]     [,14]     [,15]     [,16]     [,17]     [,18]     [,19]     [,20]\n[1,]  2411.527  3510.503  3218.074  2746.159  2921.901  2138.902  2096.711  2297.978",
        "  2603.992  1894.297\n[2,]  5018.771  6944.923  6663.953  5380.010  5781.466  4368.110  4190.418  4753.645  5347.489  3801.676\n[3,]  7821.734 10303.262  9822.820  7901.550  8578.696  6687.622  6281.120  7152.381  8230.490  5722.136\n[4,] 10511.804 13585.517 12694.676 10310.782 11313.590  8871.705  8368.817  9494.186 11252.995  7655.677\n[5,] 13088.984 16791.691 15279.520 12600.283 13986.149 10920.359 10453.510 11779.061 14072.847  9602.300\n[6,] 15553.272 19807.920 17577.351 14770.053 16596.372 12833.584 12439.363",
        " 14007.004 16690.046 11562.004\n[7,] 17904.669 22634.206 19588.172 16820.092 19046.874 14611.380 14326.378 16178.018 19104.590 13451.711\n         [,21]     [,22] [,23]\n[1,]  1946.420  3349.665    NA\n[2,]  3979.944  6703.957    NA\n[3,]  6100.572 10062.876    NA\n[4,]  8132.723 13426.422    NA\n[5,] 10076.396        NA    NA\n[6,] 11931.592        NA    NA\n[7,] 13698.310        NA    NA\n",
        "> ",
        "dim(indAll)",
        "[1]  7 23\n",
        "> ",
        "indAll",
        "     [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11] [,12] [,13] [,14] [,15] [,16] [,17] [,18] [,19]\n[1,]   24   47   70   93  116  139  162  185  208   231   254   277   300   323   346   369   392   415   438\n[2,]   25   48   71   94  117  140  163  186  209   232   255   278   301   324   347   370   393   416   439\n[3,]   26   49   72   95  118  141  164  187  210   233   256   279   302   325   348   371   394   417   440\n[4,]   27   50   73   96  119  142  165  188  211   234   257   280   303",
        "   326   349   372   395   418   441\n[5,]   28   51   74   97  120  143  166  189  212   235   258   281   304   327   350   373   396   419   442\n[6,]   29   52   75   98  121  144  167  190  213   236   259   282   305   328   351   374   397   420   443\n[7,]   30   53   76   99  122  145  168  191  214   237   260   283   306   329   352   375   398   421   444\n     [,20] [,21] [,22] [,23]\n[1,]   461   484   507    NA\n[2,]   462   485   508    NA\n[3,]   463   486   509    NA\n[4,]   464   487   510    NA\n[5,]",
        "   465   488    NA    NA\n[6,]   466   489    NA    NA\n[7,]   467   490    NA    NA\n",
        "> ",
        "indAll[1,21]",
        "[1] 484\n",
        "> ",
        "indAll[7,1:21]",
        " [1]  30  53  76  99 122 145 168 191 214 237 260 283 306 329 352 375 398 421 444 467 490\n",
        "> ",
        "cRaster[indAll[7,1:21]]",
        " [1] 24469.46 15126.76 20782.90 17309.34 20187.90 20547.68 16159.45 18485.99 16179.80 17288.68 17904.67\n[12] 22634.21 19588.17 16820.09 19046.87 14611.38 14326.38 16178.02 19104.59 13451.71 13698.31\n",
        "> ",
        "dim(indAll)",
        "[1]  7 23\n",
        "> ",
        "x",
        "  [1] 3082.287 2868.329 2654.370 2440.412 2226.453 2012.495 1930.446 1848.397 1766.348 1684.299 1602.250\n [12] 1544.876 1487.502 1430.129 1372.755 1315.381 1412.646 1509.912 1607.178 1704.443 1801.709 2236.611\n [23] 2671.513 3106.416 3541.318 3976.220 3770.282 3564.344 3358.406 3152.469 2946.531 2793.982 2641.433\n [34] 2488.884 2336.335 2183.787 2183.780 2183.773 2183.766 2183.759 2183.752 2196.506 2209.260 2222.014\n [45] 2234.768 2247.522 2237.342 2227.162 2216.982 2206.802 2196.623 2079.489 1962.356 1845.223",
        " 1728.090\n [56] 1610.957 1596.256 1581.556 1566.856 1552.155 1537.455 1637.128 1736.802 1836.476 1936.149 2035.823\n [67] 2345.708 2655.593 2965.478 3275.363 3585.248 3318.318 3051.388 2784.458 2517.528 2250.598 2157.766\n [78] 2064.934 1972.103 1879.271 1786.439 1747.446 1708.452 1669.459 1630.466 1591.473 1831.221 2070.970\n [89] 2310.719 2550.468 2790.216 2749.218 2708.220 2667.222 2626.224 2585.226 2413.021 2240.816 2068.611\n[100] 1896.407 1724.202 1681.440 1638.677 1595.915 1553.153 1510.391 1507.184 1503.977",
        " 1500.770 1497.563\n[111] 1494.356 2004.835 2515.314 3025.793 3536.272 4046.751 3643.016 3239.281 2835.546 2431.811 2028.076\n[122] 1963.415 1898.754 1834.094 1769.433 1704.772 1670.944 1637.117 1603.289 1569.461 1535.634 1642.967\n[133] 1750.300 1857.633 1964.966 2072.299 2361.367 2650.434 2939.502 3228.569 3517.637 3196.779 2875.922\n[144] 2555.064 2234.207 1913.349 1877.390 1841.432 1805.473 1769.514 1733.555 1727.061 1720.566 1714.071\n[155] 1707.577 1701.082 1860.590 2020.097 2179.604 2339.112 2498.619 2460.435",
        " 2422.251 2384.067 2345.882\n[166] 2307.698 2182.271 2056.844 1931.417 1805.990 1680.563 1654.200 1627.836 1601.472 1575.108 1548.744\n[177] 1592.872 1637.000 1681.128 1725.255 1769.383 2063.323 2357.263 2651.204 2945.144 3239.084 2979.507\n[188] 2719.930 2460.353 2200.776 1941.199 1872.164 1803.129 1734.094 1665.058 1596.023 1572.543 1549.063\n[199] 1525.583 1502.103 1478.623 1666.653 1854.683 2042.714 2230.744 2418.774 2423.571 2428.368 2433.165\n[210] 2437.962 2442.760 2294.304 2145.848 1997.392 1848.936 1700.480",
        " 1646.399 1592.317 1538.235 1484.153\n[221] 1430.071 1519.361 1608.650 1697.940 1787.229 1876.518 2122.615 2368.711 2614.807 2860.904 3107.000\n[232] 2888.155 2669.311 2450.466 2231.622 2012.777 1929.350 1845.924 1762.497 1679.070 1595.643 1577.600\n[243] 1559.558 1541.515 1523.473 1505.430 1569.219 1633.008 1696.796 1760.585 1824.373 2020.091 2215.809\n[254] 2411.527 2607.245 2802.962 2690.071 2577.180 2464.288 2351.397 2238.505 2138.792 2039.079 1939.366\n[265] 1839.653 1739.939 1693.002 1646.064 1599.127 1552.190",
        " 1505.252 1921.519 2337.785 2754.052 3170.319\n[276] 3586.585 3510.503 3434.421 3358.338 3282.256 3206.174 3016.229 2826.285 2636.341 2446.397 2256.453\n[287] 2178.742 2101.032 2023.321 1945.611 1867.900 1955.691 2043.482 2131.273 2219.063 2306.854 2534.659\n[298] 2762.464 2990.269 3218.074 3445.879 3158.867 2871.855 2584.844 2297.832 2010.820 1951.964 1893.108\n[309] 1834.253 1775.397 1716.541 1756.574 1796.608 1836.641 1876.674 1916.708 2127.522 2338.336 2549.150\n[320] 2759.964 2970.778 2858.469 2746.159 2633.850",
        " 2521.541 2409.232 2289.501 2169.770 2050.039 1930.309\n[331] 1810.578 1814.706 1818.834 1822.961 1827.089 1831.217 1812.246 1793.275 1774.305 1755.334 1736.363\n[342] 1973.471 2210.578 2447.686 2684.793 2921.901 2859.565 2797.230 2734.894 2672.559 2610.223 2450.502\n[353] 2290.780 2131.058 1971.336 1811.615 1794.079 1776.543 1759.007 1741.472 1723.936 1752.746 1781.557\n[364] 1810.367 1839.178 1867.988 1958.293 2048.598 2138.902 2229.207 2319.512 2184.083 2048.654 1913.225\n[375] 1777.796 1642.367 1606.480 1570.593",
        " 1534.706 1498.819 1462.932 1456.710 1450.489 1444.268 1438.046\n[386] 1431.825 1565.403 1698.981 1832.560 1966.138 2099.716 2096.711 2093.707 2090.702 2087.697 2084.693\n[397] 1985.854 1887.014 1788.175 1689.336 1590.497 1586.276 1582.055 1577.834 1573.613 1569.392 1588.959\n[408] 1608.525 1628.091 1647.657 1667.224 1824.912 1982.601 2140.289 2297.978 2455.667 2398.736 2341.805\n[419] 2284.875 2227.944 2171.013 2089.400 2007.786 1926.173 1844.560 1762.946 1738.223 1713.499 1688.776\n[430] 1664.052 1639.329 1776.460",
        " 1913.591 2050.721 2187.852 2324.983 2464.488 2603.992 2743.497 2883.001\n[441] 3022.505 2819.852 2617.198 2414.545 2211.891 2009.238 1968.956 1928.675 1888.393 1848.112 1807.830\n[452] 1897.501 1987.172 2076.843 2166.514 2256.185 2183.807 2111.430 2039.052 1966.675 1894.297 1907.379\n[463] 1920.460 1933.541 1946.623 1959.704 1889.707 1819.710 1749.712 1679.715 1609.718 1611.040 1612.363\n[474] 1613.686 1615.008 1616.331 1630.086 1643.841 1657.596 1671.351 1685.106 1772.211 1859.315 1946.420\n[485] 2033.524 2120.629",
        " 2032.151 1943.673 1855.196 1766.718 1678.240 1663.294 1648.348 1633.402 1618.456\n[496] 1603.510 1585.357 1567.204 1549.051 1530.898 1512.745 1879.203 2245.662 2612.120 2978.579 3345.037\n[507] 3349.665 3354.292 3358.919 3363.546\n",
        "> ",
        "x <- as.numeric(esNDVI$values[3000,100,])",
        "> ",
        "cumRast(x,dates=dates,step=16)",
        "  [1]        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA\n [11]        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA\n [21]        NA        NA        NA  3106.416  6647.734 10623.954 14394.237 17958.581 21316.987 24469.456\n [31]        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA\n [41]        NA        NA        NA        NA        NA        NA  2237.342  4464.504  6681.487",
        "  8888.289\n [51] 11084.912 13164.401 15126.758        NA        NA        NA        NA        NA        NA        NA\n [61]        NA        NA        NA        NA        NA        NA        NA        NA        NA  3275.363\n [71]  6860.611 10178.928 13230.316 16014.774 18532.302 20782.901        NA        NA        NA        NA\n [81]        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA\n [91]        NA        NA  2708.220  5375.442  8001.666 10586.891 12999.912 15240.729",
        " 17309.340        NA\n[101]        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA\n[111]        NA        NA        NA        NA        NA  4046.751  7689.767 10929.048 13764.594 16196.405\n[121] 18224.481 20187.897        NA        NA        NA        NA        NA        NA        NA        NA\n[131]        NA        NA        NA        NA        NA        NA        NA        NA  2939.502  6168.071\n[141]  9685.708 12882.487 15758.408 18313.473 20547.679        NA        NA",
        "        NA        NA        NA\n[151]        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA\n[161]        NA  2460.435  4882.686  7266.752  9612.635 11920.333 14102.604 16159.448        NA        NA\n[171]        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA\n[181]        NA        NA        NA        NA  2945.144  6184.228  9163.735 11883.665 14344.019 16544.795\n[191] 18485.995        NA        NA        NA        NA        NA",
        "        NA        NA        NA        NA\n[201]        NA        NA        NA        NA        NA        NA        NA  2428.368  4861.533  7299.496\n[211]  9742.255 12036.559 14182.407 16179.799        NA        NA        NA        NA        NA        NA\n[221]        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA\n[231]  3107.000  5995.155  8664.466 11114.933 13346.555 15359.332 17288.683        NA        NA        NA\n[241]        NA        NA        NA        NA        NA",
        "        NA        NA        NA        NA        NA\n[251]        NA        NA        NA  2411.527  5018.771  7821.734 10511.804 13088.984 15553.272 17904.669\n[261]        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA\n[271]        NA        NA        NA        NA        NA        NA  3510.503  6944.923 10303.262 13585.517\n[281] 16791.691 19807.920 22634.206        NA        NA        NA        NA        NA        NA        NA\n[291]        NA        NA        NA        NA",
        "        NA        NA        NA        NA        NA  3218.074\n[301]  6663.953  9822.820 12694.676 15279.520 17577.351 19588.172        NA        NA        NA        NA\n[311]        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA\n[321]        NA        NA  2746.159  5380.010  7901.550 10310.782 12600.283 14770.053 16820.092        NA\n[331]        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA\n[341]        NA        NA        NA",
        "        NA        NA  2921.901  5781.466  8578.696 11313.590 13986.149\n[351] 16596.372 19046.874        NA        NA        NA        NA        NA        NA        NA        NA\n[361]        NA        NA        NA        NA        NA        NA        NA        NA  2138.902  4368.110\n[371]  6687.622  8871.705 10920.359 12833.584 14611.380        NA        NA        NA        NA        NA\n[381]        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA\n[391]        NA  2096.711",
        "  4190.418  6281.120  8368.817 10453.510 12439.363 14326.378        NA        NA\n[401]        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA\n[411]        NA        NA        NA        NA  2297.978  4753.645  7152.381  9494.186 11779.061 14007.004\n[421] 16178.018        NA        NA        NA        NA        NA        NA        NA        NA        NA\n[431]        NA        NA        NA        NA        NA        NA        NA  2603.992  5347.489  8230.490\n[441] 11252.995",
        " 14072.847 16690.046 19104.590        NA        NA        NA        NA        NA        NA\n[451]        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA\n[461]  1894.297  3801.676  5722.136  7655.677  9602.300 11562.004 13451.711        NA        NA        NA\n[471]        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA\n[481]        NA        NA        NA  1946.420  3979.944  6100.572  8132.723 10076.396 11931.592 13698.310",
        "\n[491]        NA        NA        NA        NA        NA        NA        NA        NA        NA        NA\n[501]        NA        NA        NA        NA        NA        NA  3349.665  6703.957 10062.876 13426.422\n",
        "> ",
        "cumRast(x,dates=dates,step=16,get =c('eos',21))",
        "[1]  1946.420  3979.944  6100.572  8132.723 10076.396 11931.592 13698.310\n",
        "> ",
        "cumRast <- function(x,dates,step,get = 'all'){",
        "+ ",
        "    NAasZero = TRUE",
        "+ ",
        "    ",
        "+ ",
        "   #x <- as.vector(x)",
        "+ ",
        "   # index for the pixel where are values (not NA)",
        "+ ",
        "   years = max(unique(lubridate::year(dates)))-min(unique(lubridate::year(dates)))+1",
        "+ ",
        "   sos <- x[1]",
        "+ ",
        "   eos <- x[2]",
        "+ ",
        "   x <- x[3:length(x)]",
        "+ ",
        "   nl <- length(x)",
        "+ ",
        "   ",
        "+ ",
        "  #dates of the MOD13 product between 2000 and 2002",
        "+ ",
        "  times <- round(365/step)",
        "+ ",
        "  dates2s <- as.vector(sapply(2002:2004,function(year) seq(as.Date(paste0(year,\"-01-01\")),as.Date(paste0(year,\"-12-31\")),by=step)))",
        "+ ",
        "  indGS <- intersect(which(dates2s >= sos),which(dates2s + step <= eos))",
        "+ ",
        "  indAll <- matrix(sapply(0:(years-1),function(l) indGS+times*l),ncol=years)",
        "+ ",
        "  cRaster <- rep(NA, length(x))",
        "+ ",
        "",
        "+ ",
        "  if (all(!is.na(as.numeric(indAll)))){",
        "+ ",
        "    # indAll[which(indAll[,years-1] > nl),years-1] <- NA",
        "+ ",
        "    # indAll[which(indAll[,years] > nl),years] <- NA",
        "+ ",
        "    indAll[indAll > nl] <- NA",
        "+ ",
        "    isc <- as.numeric(indAll)",
        "+ ",
        "    isc <- isc[!is.na(isc)]",
        "+ ",
        "",
        "+ ",
        "    if (NAasZero){ #wsto hay que modificarlo solo resulve un caso especifico",
        "+ ",
        "      x[x > 32700] <- 0",
        "+ ",
        "      x[is.na(x)] <- 0",
        "+ ",
        "    }",
        "+ ",
        "    cRaster[isc] <- as.numeric(apply(indAll,2,FUN=function(ix) cumsum(x[ix])))[1:length(isc)]",
        "+ ",
        "  }",
        "+ ",
        "  ",
        "+ ",
        "    if (get[1] == 'eos'){",
        "+ ",
        "      y <- as.numeric(get[2])",
        "+ ",
        "      cRaster <- cRaster[indAll[dim(indAll)[1],y]]",
        "+ ",
        "    }",
        "+ ",
        "  return(cRaster)",
        "+ ",
        "}",
        "> ",
        "cumRast(x,dates=dates,step=16,get =c('eos',21))",
        "[1] 13698.31\n",
        "> ",
        "cumRast <- function(x,dates,step,get = 'all'){",
        "+ ",
        "    NAasZero = TRUE",
        "+ ",
        "    ",
        "+ ",
        "   #x <- as.vector(x)",
        "+ ",
        "   # index for the pixel where are values (not NA)",
        "+ ",
        "   years = max(unique(lubridate::year(dates)))-min(unique(lubridate::year(dates)))+1",
        "+ ",
        "   sos <- x[1]",
        "+ ",
        "   eos <- x[2]",
        "+ ",
        "   x <- x[3:length(x)]",
        "+ ",
        "   nl <- length(x)",
        "+ ",
        "   ",
        "+ ",
        "  #dates of the MOD13 product between 2000 and 2002",
        "+ ",
        "  times <- round(365/step)",
        "+ ",
        "  dates2s <- as.vector(sapply(2002:2004,function(year) seq(as.Date(paste0(year,\"-01-01\")),as.Date(paste0(year,\"-12-31\")),by=step)))",
        "+ ",
        "  indGS <- intersect(which(dates2s >= sos),which(dates2s + step <= eos))",
        "+ ",
        "  indAll <- matrix(sapply(0:(years-1),function(l) indGS+times*l),ncol=years)",
        "+ ",
        "  cRaster <- rep(NA, length(x))",
        "+ ",
        "",
        "+ ",
        "  if (all(!is.na(as.numeric(indAll)))){",
        "+ ",
        "    # indAll[which(indAll[,years-1] > nl),years-1] <- NA",
        "+ ",
        "    # indAll[which(indAll[,years] > nl),years] <- NA",
        "+ ",
        "    indAll[indAll > nl] <- NA",
        "+ ",
        "    isc <- as.numeric(indAll)",
        "+ ",
        "    isc <- isc[!is.na(isc)]",
        "+ ",
        "",
        "+ ",
        "    if (NAasZero){ #wsto hay que modificarlo solo resulve un caso especifico",
        "+ ",
        "      x[x > 32700] <- 0",
        "+ ",
        "      x[is.na(x)] <- 0",
        "+ ",
        "    }",
        "+ ",
        "    cRaster[isc] <- as.numeric(apply(indAll,2,FUN=function(ix) cumsum(x[ix])))[1:length(isc)]",
        "+ ",
        "  }",
        "+ ",
        "  ",
        "+ ",
        "    if (get[1] == 'eos'){",
        "+ ",
        "      y <- as.numeric(get[2])",
        "+ ",
        "      cRaster <- cRaster[indAll[dim(indAll)[1],1:y]]",
        "+ ",
        "    }",
        "+ ",
        "  return(cRaster)",
        "+ ",
        "}",
        "> ",
        "cumRast(x,dates=dates,step=16,get =c('eos',21))",
        " [1] 24469.46 15126.76 20782.90 17309.34 20187.90 20547.68 16159.45 18485.99 16179.80 17288.68 17904.67\n[12] 22634.21 19588.17 16820.09 19046.87 14611.38 14326.38 16178.02 19104.59 13451.71 13698.31\n",
        "> ",
        "x <- as.numeric(esNDVI$values[3000,101,])",
        "Error in esNDVI$values[3000, 101, ] : subíndice fuera de  los límites\n",
        "> ",
        "x <- as.numeric(esNDVI$values[3000,99,])",
        "> ",
        "x",
        "  [1] 12047.000 12165.500  2802.925  2636.102  2469.279  2302.456  2135.634  1968.811  1881.804  1794.797\n [11]  1707.790  1620.783  1533.776  1494.453  1455.130  1415.807  1376.484  1337.161  1422.978  1508.795\n [21]  1594.612  1680.429  1766.246  2122.396  2478.547  2834.698  3190.849  3547.000  3349.488  3151.976\n [31]  2954.464  2756.952  2559.440  2463.096  2366.752  2270.408  2174.064  2077.720  2063.427  2049.133\n [41]  2034.840  2020.547  2006.254  2062.501  2118.747  2174.994  2231.241  2287.487  2333.685",
        "  2379.883\n [51]  2426.081  2472.279  2518.477  2364.540  2210.602  2056.664  1902.726  1748.788  1717.310  1685.831\n [61]  1654.352  1622.873  1591.394  1680.049  1768.704  1857.358  1946.013  2034.668  2357.109  2679.551\n [71]  3001.992  3324.433  3646.875  3363.820  3080.765  2797.710  2514.655  2231.600  2133.464  2035.327\n [81]  1937.190  1839.053  1740.917  1706.403  1671.889  1637.376  1602.862  1568.349  1812.974  2057.600\n [91]  2302.225  2546.851  2791.476  2728.225  2664.974  2601.723  2538.472  2475.221",
        "  2319.200  2163.178\n[101]  2007.156  1851.134  1695.113  1654.153  1613.194  1572.235  1531.276  1490.317  1486.268  1482.219\n[111]  1478.171  1474.122  1470.073  1593.459  1716.844  1840.229  1963.615  2087.000  2085.317  2083.634\n[121]  2081.952  2080.269  2078.586  2001.472  1924.358  1847.244  1770.130  1693.016  1662.214  1631.411\n[131]  1600.609  1569.806  1539.003  1669.357  1799.710  1930.063  2060.416  2190.769  2432.422  2674.076\n[141]  2915.729  3157.382  3399.035  3091.897  2784.760  2477.622  2170.485",
        "  1863.347  1829.495  1795.643\n[151]  1761.791  1727.940  1694.088  1693.032  1691.977  1690.922  1689.867  1688.811  1840.962  1993.112\n[161]  2145.262  2297.412  2449.563  2398.115  2346.667  2295.219  2243.771  2192.323  2080.447  1968.570\n[171]  1856.694  1744.817  1632.941  1609.682  1586.423  1563.164  1539.906  1516.647  1555.869  1595.091\n[181]  1634.313  1673.536  1712.758  1991.587  2270.416  2549.245  2828.074  3106.903  2850.836  2594.769\n[191]  2338.702  2082.635  1826.568  1773.892  1721.215  1668.538",
        "  1615.862  1563.185  1550.998  1538.812\n[201]  1526.625  1514.438  1502.252  1677.515  1852.779  2028.042  2203.306  2378.570  2391.703  2404.837\n[211]  2417.971  2431.104  2444.238  2290.641  2137.045  1983.448  1829.851  1676.255  1630.633  1585.011\n[221]  1539.390  1493.768  1448.146  1559.503  1670.860  1782.216  1893.573  2004.929  2205.343  2405.758\n[231]  2606.172  2806.586  3007.000  2788.882  2570.764  2352.646  2134.528  1916.410  1848.923  1781.437\n[241]  1713.950  1646.464  1578.977  1560.929  1542.881",
        "  1524.833  1506.785  1488.737  1551.490  1614.243\n[251]  1676.997  1739.750  1802.503  1996.138  2189.773  2383.408  2577.042  2770.677  2631.142  2491.607\n[261]  2352.072  2212.537  2073.002  1994.722  1916.442  1838.162  1759.882  1681.602  1645.990  1610.378\n[271]  1574.766  1539.154  1503.543  1850.694  2197.845  2544.996  2892.147  3239.298  3226.591  3213.885\n[281]  3201.179  3188.472  3175.766  2977.683  2779.600  2581.518  2383.435  2185.352  2100.869  2016.387\n[291]  1931.904  1847.421  1762.938  1861.023",
        "  1959.107  2057.191  2155.275  2253.359  2536.684  2820.009\n[301]  3103.333  3386.658  3669.983  3328.769  2987.556  2646.342  2305.128  1963.915  1908.652  1853.389\n[311]  1798.126  1742.864  1687.601  1714.559  1741.517  1768.475  1795.433  1822.391  2013.874  2205.357\n[321]  2396.839  2588.322  2779.805  2695.743  2611.681  2527.619  2443.557  2359.495  2231.670  2103.844\n[331]  1976.019  1848.193  1720.368  1729.496  1738.624  1747.752  1756.881  1766.009  1752.436  1738.862\n[341]  1725.289  1711.716  1698.143",
        "  1949.813  2201.483  2453.153  2704.823  2956.494  2865.426  2774.358\n[351]  2683.290  2592.222  2501.154  2333.658  2166.161  1998.665  1831.168  1663.671  1667.772  1671.873\n[361]  1675.973  1680.074  1684.175  1720.674  1757.173  1793.672  1830.171  1866.670  1934.207  2001.745\n[371]  2069.282  2136.819  2204.357  2082.298  1960.239  1838.180  1716.122  1594.063  1559.210  1524.357\n[381]  1489.504  1454.651  1419.798  1417.650  1415.502  1413.354  1411.206  1409.058  1517.155  1625.252\n[391]  1733.349  1841.446",
        "  1949.543  1976.635  2003.727  2030.819  2057.911  2085.004  1991.847  1898.691\n[401]  1805.535  1712.379  1619.223  1602.831  1586.440  1570.049  1553.658  1537.267  1550.559  1563.852\n[411]  1577.144  1590.436  1603.729  1749.754  1895.778  2041.803  2187.828  2333.853  2277.661  2221.470\n[421]  2165.279  2109.088  2052.896  1994.801  1936.706  1878.611  1820.516  1762.421  1728.209  1693.996\n[431]  1659.784  1625.572  1591.360  1733.314  1875.269  2017.224  2159.179  2301.134  2389.508  2477.883\n[441]  2566.258",
        "  2654.632  2743.007  2564.742  2386.478  2208.213  2029.948  1851.684  1821.270  1790.855\n[451]  1760.441  1730.027  1699.613  1782.086  1864.559  1947.032  2029.505  2111.978  2176.919  2241.861\n[461]  2306.803  2371.745  2436.686  2315.449  2194.211  2072.973  1951.735  1830.497  1775.354  1720.210\n[471]  1665.067  1609.923  1554.779  1547.007  1539.235  1531.463  1523.692  1515.920  1539.400  1562.880\n[481]  1586.360  1609.840  1633.320  1695.589  1757.858  1820.127  1882.396  1944.664  1872.426  1800.189",
        "\n[491]  1727.951  1655.713  1583.475  1571.588  1559.702  1547.816  1535.929  1524.043  1513.892  1503.741\n[501]  1493.590  1483.439  1473.288  1796.707  2120.126  2443.545  2766.964  3090.383  3168.402  3246.421\n[511]  3324.440  3402.459\n",
        "> ",
        "cumRast(x,dates=dates,step=16,get =c('eos',21))",
        " [1] 21785.43 16705.55 20959.86 16769.92 14498.23 19996.91 15525.11 17628.49 16109.28 16619.15 17418.49\n[12] 21763.18 20288.35 16253.89 18706.60 14007.30 14044.64 15348.08 17601.21 14576.91 12703.47\n",
        "> ",
        " cl <- makeCluster(11,\"SOCK\")",
        "> ",
        "  eoscNDVI <- st_apply(esNDVI,1:2,cumRast,dates = dates, step = 16, get = c('eos',21),CLUSTER = cl,PROGRESS = TRUE,.fname = 'dates')",
        "\r  |                                                  | 0 % ~calculating  ",
        "Error in checkForRemoteErrors(val) : \n  11 nodes produced errors; first error: invalid subscript type 'list'\n",
        "\n",
        "> ",
        "  stopCluster(cl)",
        "> ",
        "source('R/functions/cumRast.R')",
        "> ",
        "cl <- makeCluster(11,\"SOCK\")",
        "> ",
        "  eoscNDVI <- st_apply(esNDVI,1:2,cumRast,dates = dates, step = 16, get = c('eos',21),CLUSTER = cl,PROGRESS = TRUE,.fname = 'dates')",
        "\r  |                                                  | 0 % ~calculating  ",
        "Error in checkForRemoteErrors(val) : \n  11 nodes produced errors; first error: invalid subscript type 'list'\n",
        "\n",
        "> ",
        "  stopCluster(cl)",
        "> ",
        "cumRast <- function(x,dates,step,get = 'all'){",
        "+ ",
        "    NAasZero = TRUE",
        "+ ",
        "    ",
        "+ ",
        "   #x <- as.vector(x)",
        "+ ",
        "   # index for the pixel where are values (not NA)",
        "+ ",
        "   years = max(unique(lubridate::year(dates)))-min(unique(lubridate::year(dates)))+1",
        "+ ",
        "   sos <- x[1]",
        "+ ",
        "   eos <- x[2]",
        "+ ",
        "   x <- x[3:length(x)]",
        "+ ",
        "   nl <- length(x)",
        "+ ",
        "   ",
        "+ ",
        "  #dates of the MOD13 product between 2000 and 2002",
        "+ ",
        "  times <- round(365/step)",
        "+ ",
        "  dates2s <- as.vector(sapply(2002:2004,function(year) seq(as.Date(paste0(year,\"-01-01\")),as.Date(paste0(year,\"-12-31\")),by=step)))",
        "+ ",
        "  indGS <- intersect(which(dates2s >= sos),which(dates2s + step <= eos))",
        "+ ",
        "  indAll <- matrix(sapply(0:(years-1),function(l) indGS+times*l),ncol=years)",
        "+ ",
        "  cRaster <- rep(NA, length(x))",
        "+ ",
        "",
        "+ ",
        "  if (all(!is.na(as.numeric(indAll)))){",
        "+ ",
        "    # indAll[which(indAll[,years-1] > nl),years-1] <- NA",
        "+ ",
        "    # indAll[which(indAll[,years] > nl),years] <- NA",
        "+ ",
        "    indAll[indAll > nl] <- NA",
        "+ ",
        "    isc <- as.numeric(indAll)",
        "+ ",
        "    isc <- isc[!is.na(isc)]",
        "+ ",
        "",
        "+ ",
        "    if (NAasZero){ #wsto hay que modificarlo solo resulve un caso especifico",
        "+ ",
        "      x[x > 32700] <- 0",
        "+ ",
        "      x[is.na(x)] <- 0",
        "+ ",
        "    }",
        "+ ",
        "    cRaster[isc] <- as.numeric(apply(indAll,2,FUN=function(ix) cumsum(x[ix])))[1:length(isc)]",
        "+ ",
        "  }",
        "+ ",
        "  ",
        "+ ",
        "    if (get[1] == 'eos'){",
        "+ ",
        "      y <- as.numeric(get[2])",
        "+ ",
        "      ix <- indAll[dim(indAll)[1],1:y]",
        "+ ",
        "      cRaster <- cRaster[ix]",
        "+ ",
        "    }",
        "+ ",
        "  return(cRaster)",
        "+ ",
        "}",
        "> ",
        "x <- as.numeric(esNDVI$values[3000,99,])",
        "> ",
        "cumRast(x,dates=dates,step=16,get =c('eos',21))",
        " [1] 21785.43 16705.55 20959.86 16769.92 14498.23 19996.91 15525.11 17628.49 16109.28 16619.15 17418.49\n[12] 21763.18 20288.35 16253.89 18706.60 14007.30 14044.64 15348.08 17601.21 14576.91 12703.47\n",
        "> ",
        "cumRast <- function(x,dates,step,get = 'all'){",
        "+ ",
        "    NAasZero = TRUE",
        "+ ",
        "    ",
        "+ ",
        "   #x <- as.vector(x)",
        "+ ",
        "   # index for the pixel where are values (not NA)",
        "+ ",
        "   years = max(unique(lubridate::year(dates)))-min(unique(lubridate::year(dates)))+1",
        "+ ",
        "   sos <- x[1]",
        "+ ",
        "   eos <- x[2]",
        "+ ",
        "   x <- x[3:length(x)]",
        "+ ",
        "   nl <- length(x)",
        "+ ",
        "   ",
        "+ ",
        "  #dates of the MOD13 product between 2000 and 2002",
        "+ ",
        "  times <- round(365/step)",
        "+ ",
        "  dates2s <- as.vector(sapply(2002:2004,function(year) seq(as.Date(paste0(year,\"-01-01\")),as.Date(paste0(year,\"-12-31\")),by=step)))",
        "+ ",
        "  indGS <- intersect(which(dates2s >= sos),which(dates2s + step <= eos))",
        "+ ",
        "  indAll <- matrix(sapply(0:(years-1),function(l) indGS+times*l),ncol=years)",
        "+ ",
        "  cRaster <- rep(NA, length(x))",
        "+ ",
        "",
        "+ ",
        "  if (all(!is.na(as.numeric(indAll)))){",
        "+ ",
        "    # indAll[which(indAll[,years-1] > nl),years-1] <- NA",
        "+ ",
        "    # indAll[which(indAll[,years] > nl),years] <- NA",
        "+ ",
        "    indAll[indAll > nl] <- NA",
        "+ ",
        "    isc <- as.numeric(indAll)",
        "+ ",
        "    isc <- isc[!is.na(isc)]",
        "+ ",
        "",
        "+ ",
        "    if (NAasZero){ #wsto hay que modificarlo solo resulve un caso especifico",
        "+ ",
        "      x[x > 32700] <- 0",
        "+ ",
        "      x[is.na(x)] <- 0",
        "+ ",
        "    }",
        "+ ",
        "    cRaster[isc] <- as.numeric(apply(indAll,2,FUN=function(ix) cumsum(x[ix])))[1:length(isc)]",
        "+ ",
        "  }",
        "+ ",
        "  ",
        "+ ",
        "    if (get[1] == 'eos'){",
        "+ ",
        "      y <- as.numeric(get[2])",
        "+ ",
        "      ix <- as.numeric(indAll[dim(indAll)[1],1:y])",
        "+ ",
        "      cRaster <- cRaster[ix]",
        "+ ",
        "    }",
        "+ ",
        "  return(cRaster)",
        "+ ",
        "}",
        "> ",
        "cl <- makeCluster(11,\"SOCK\")",
        "> ",
        "  eoscNDVI <- st_apply(esNDVI,1:2,cumRast,dates = dates, step = 16, get = c('eos',21),CLUSTER = cl,PROGRESS = TRUE,.fname = 'dates')",
        "\r  |                                                  | 0 % ~calculating  \r  |+                                                 | 1 % ~01m 27s      \r  |+                                                 | 2 % ~01m 13s      \r  |++                                                | 3 % ~01m 09s      \r  |++                                                | 4 % ~01m 06s      \r  |+++                                               | 5 % ~01m 04s      \r  |+++                                               | 6 % ~01m 03s      ",
        "\r  |++++                                              | 7 % ~01m 01s      \r  |++++                                              | 8 % ~01m 00s      \r  |+++++                                             | 9 % ~59s          \r  |+++++                                             | 10% ~59s          \r  |++++++                                            | 11% ~58s          \r  |++++++                                            | 12% ~57s          \r  |+++++++                                           | 13% ~56s          ",
        "\r  |+++++++                                           | 14% ~56s          \r  |++++++++                                          | 15% ~55s          \r  |++++++++                                          | 16% ~55s          \r  |+++++++++                                         | 17% ~54s          \r  |+++++++++                                         | 18% ~53s          \r  |++++++++++                                        | 19% ~52s          \r  |++++++++++                                        | 20% ~52s          ",
        "\r  |+++++++++++                                       | 21% ~51s          \r  |+++++++++++                                       | 22% ~50s          \r  |++++++++++++                                      | 23% ~49s          \r  |++++++++++++                                      | 24% ~48s          \r  |+++++++++++++                                     | 25% ~48s          \r  |+++++++++++++                                     | 26% ~47s          \r  |++++++++++++++                                    | 27% ~46s          ",
        "\r  |++++++++++++++                                    | 28% ~46s          \r  |+++++++++++++++                                   | 29% ~45s          \r  |+++++++++++++++                                   | 30% ~44s          \r  |++++++++++++++++                                  | 31% ~43s          \r  |++++++++++++++++                                  | 32% ~43s          \r  |+++++++++++++++++                                 | 33% ~42s          \r  |+++++++++++++++++                                 | 34% ~41s          ",
        "\r  |++++++++++++++++++                                | 35% ~41s          \r  |++++++++++++++++++                                | 36% ~40s          \r  |+++++++++++++++++++                               | 37% ~39s          \r  |+++++++++++++++++++                               | 38% ~39s          \r  |++++++++++++++++++++                              | 39% ~38s          \r  |++++++++++++++++++++                              | 40% ~37s          \r  |+++++++++++++++++++++                             | 41% ~37s          ",
        "\r  |+++++++++++++++++++++                             | 42% ~36s          \r  |++++++++++++++++++++++                            | 43% ~36s          \r  |++++++++++++++++++++++                            | 44% ~35s          \r  |+++++++++++++++++++++++                           | 45% ~34s          \r  |+++++++++++++++++++++++                           | 46% ~34s          \r  |++++++++++++++++++++++++                          | 47% ~33s          \r  |++++++++++++++++++++++++                          | 48% ~32s          ",
        "\r  |+++++++++++++++++++++++++                         | 49% ~32s          \r  |+++++++++++++++++++++++++                         | 50% ~31s          \r  |++++++++++++++++++++++++++                        | 51% ~30s          \r  |++++++++++++++++++++++++++                        | 52% ~30s          \r  |+++++++++++++++++++++++++++                       | 53% ~29s          \r  |+++++++++++++++++++++++++++                       | 54% ~29s          \r  |++++++++++++++++++++++++++++                      | 55% ~28s          ",
        "\r  |++++++++++++++++++++++++++++                      | 56% ~27s          \r  |+++++++++++++++++++++++++++++                     | 57% ~27s          \r  |+++++++++++++++++++++++++++++                     | 58% ~26s          \r  |++++++++++++++++++++++++++++++                    | 59% ~25s          \r  |++++++++++++++++++++++++++++++                    | 60% ~25s          \r  |+++++++++++++++++++++++++++++++                   | 61% ~24s          \r  |+++++++++++++++++++++++++++++++                   | 62% ~23s          ",
        "\r  |++++++++++++++++++++++++++++++++                  | 63% ~23s          \r  |++++++++++++++++++++++++++++++++                  | 64% ~22s          \r  |+++++++++++++++++++++++++++++++++                 | 65% ~22s          \r  |+++++++++++++++++++++++++++++++++                 | 66% ~21s          \r  |++++++++++++++++++++++++++++++++++                | 67% ~20s          \r  |++++++++++++++++++++++++++++++++++                | 68% ~20s          \r  |+++++++++++++++++++++++++++++++++++               | 69% ~19s          ",
        "\r  |+++++++++++++++++++++++++++++++++++               | 70% ~18s          \r  |++++++++++++++++++++++++++++++++++++              | 71% ~18s          \r  |++++++++++++++++++++++++++++++++++++              | 72% ~17s          \r  |+++++++++++++++++++++++++++++++++++++             | 73% ~17s          \r  |+++++++++++++++++++++++++++++++++++++             | 74% ~16s          \r  |++++++++++++++++++++++++++++++++++++++            | 75% ~15s          \r  |++++++++++++++++++++++++++++++++++++++            | 76% ~15s          ",
        "\r  |+++++++++++++++++++++++++++++++++++++++           | 77% ~14s          \r  |+++++++++++++++++++++++++++++++++++++++           | 78% ~14s          \r  |++++++++++++++++++++++++++++++++++++++++          | 79% ~13s          \r  |++++++++++++++++++++++++++++++++++++++++          | 80% ~12s          \r  |+++++++++++++++++++++++++++++++++++++++++         | 81% ~12s          \r  |+++++++++++++++++++++++++++++++++++++++++         | 82% ~11s          \r  |++++++++++++++++++++++++++++++++++++++++++        | 83% ~10s          ",
        "\r  |++++++++++++++++++++++++++++++++++++++++++        | 84% ~10s          \r  |+++++++++++++++++++++++++++++++++++++++++++       | 85% ~09s          \r  |+++++++++++++++++++++++++++++++++++++++++++       | 86% ~09s          \r  |++++++++++++++++++++++++++++++++++++++++++++      | 87% ~08s          \r  |++++++++++++++++++++++++++++++++++++++++++++      | 88% ~07s          \r  |+++++++++++++++++++++++++++++++++++++++++++++     | 89% ~07s          \r  |+++++++++++++++++++++++++++++++++++++++++++++     | 90% ~06s          ",
        "\r  |++++++++++++++++++++++++++++++++++++++++++++++    | 91% ~06s          \r  |++++++++++++++++++++++++++++++++++++++++++++++    | 92% ~05s          \r  |+++++++++++++++++++++++++++++++++++++++++++++++   | 93% ~04s          \r  |+++++++++++++++++++++++++++++++++++++++++++++++   | 94% ~04s          \r  |++++++++++++++++++++++++++++++++++++++++++++++++  | 95% ~03s          \r  |++++++++++++++++++++++++++++++++++++++++++++++++  | 96% ~02s          \r  |+++++++++++++++++++++++++++++++++++++++++++++++++ | 97% ~02s          ",
        "\r  |+++++++++++++++++++++++++++++++++++++++++++++++++ | 98% ~01s          \r  |++++++++++++++++++++++++++++++++++++++++++++++++++| 99% ~01s          \r  |++++++++++++++++++++++++++++++++++++++++++++++++++| 100% elapsed=01m 01s\n",
        "> ",
        "  stopCluster(cl)",
        "> ",
        "eoscNDVI",
        "stars object with 3 dimensions and 1 attribute\nattribute(s), summary of first 1e+05 cells:\n             Min. 1st Qu.   Median     Mean  3rd Qu.     Max.  NA's\nvalues  -1160.071 14176.5 18968.44 21229.06 24863.93 83665.09 92902\ndimension(s):\n      from   to   offset    delta                refsys point values x/y\ndates    1   21       NA       NA                    NA    NA   NULL    \nx     6088 9168 -1417787  231.656 WGS 84 / UTM zone 19S    NA   NULL [x]\ny     3581 3680  8894587 -231.656 WGS 84 / UTM zone 19S",
        "    NA   NULL [y]\n",
        "> ",
        "  eoscNDVI <- merge(split(eoscNDVI,'dates'),name='dates')",
        "> ",
        "plot(eoscNDVI)",
        "downsample set to 3\n",
        "\nRestarting R session...\n\n",
        "> ",
        "# Script to calculate zcNDVI",
        "> ",
        "# by frzambra",
        "> ",
        "# April 2022",
        "> ",
        "",
        "> ",
        "product <- 'NDVI.MOD13Q1.006/'",
        "> ",
        "",
        "> ",
        "dir <- paste0('/mnt/HDD4TB_2/data/rasters/Procesados/MODIS/',product)",
        "> ",
        "dir.ph <- '/mnt/HDD4TB_2/data/rasters/Procesados/MODIS/Phenology/'",
        "> ",
        "",
        "> ",
        "library(stars)",
        "Loading required package: abind\n",
        "Loading required package: sf\n",
        "Linking to GEOS 3.9.0, GDAL 3.2.2, PROJ 7.2.1; sf_use_s2() is TRUE\n",
        "> ",
        "library(terra)",
        "terra 1.5.21\n",
        "> ",
        "library(sf)",
        "> ",
        "library(snow)",
        "> ",
        "",
        "> ",
        "pol <- st_read('data/spatial/chile_continental.gpkg')",
        "Reading layer `chile_continental' from data source \n  `/mnt/0FA1FA650427517A/OneDrive/R-projects/drought-vegetation/data/spatial/chile_continental.gpkg' \n  using driver `GPKG'\nSimple feature collection with 1 feature and 2 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -75.68856 ymin: -55.97945 xmax: -66.41828 ymax: -17.49849\nGeodetic CRS:  WGS 84\n",
        "> ",
        "pol <- st_transform(pol,32719)",
        "> ",
        "lf <- list.files(dir,pattern='*.tif$', full.names=TRUE)",
        "> ",
        "#",
        "> ",
        "ysize = 100",
        "> ",
        "sliceY <- seq(3580,22015,ysize)",
        "> ",
        "",
        "> ",
        "source('R/functions/cumRast.R')",
        "> ",
        "source('R/functions/getPerPixel.R')",
        "> ",
        "source('R/functions/smoothNDVI.R')",
        "> ",
        "",
        "> ",
        "sos <- disagg(rast(file.path(dir.ph,'SOS.Chile.S1.500m.tif')),2)",
        "> ",
        "eos <- disagg(rast(file.path(dir.ph,'EOS.Chile.S1.500m.tif')),2)",
        "> ",
        "sos_eos <- c(sos,eos)",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "lapply(1:length(sliceY),function(i){",
        "+ ",
        "  rasterio <- list(nXOff = 6088, nYOff = sliceY[i]+1, nXSize = 3081, nYSize = ysize)",
        "+ ",
        "  ",
        "+ ",
        "  ndvi <- read_stars(lf, along ='dates',RasterIO = rasterio)",
        "+ ",
        "  ndvi <- st_as_stars(ndvi)",
        "+ ",
        "  sos_eosC <- st_as_stars(st_crop(st_as_stars(sos_eos),ndvi)) %>% st_set_dimensions(3,name = 'dates')",
        "+ ",
        "  ",
        "+ ",
        "  dates <- as.Date(substr(lf,67,74),\"%Y%j\")",
        "+ ",
        "  ",
        "+ ",
        "  message('Suavizado NDVI...')",
        "+ ",
        "  ",
        "+ ",
        "  cl <- makeCluster(11,\"SOCK\")",
        "+ ",
        "  NDVI_smooth <- st_apply(ndvi,1:2,smoothNDVI,n=5,CLUSTER = cl,PROGRESS = TRUE,.fname = 'dates')",
        "+ ",
        "  stopCluster(cl)",
        "+ ",
        "  ",
        "+ ",
        "  NDVI_smooth <- st_as_stars(NDVI_smooth) ",
        "+ ",
        "  NDVI_smooth <- merge(split(NDVI_smooth,'dates'),name='dates')",
        "+ ",
        "  ",
        "+ ",
        "  ",
        "+ ",
        "  esNDVI <- c(sos_eosC,NDVI_smooth, along = 'dates')",
        "+ ",
        "  ",
        "+ ",
        "  rm(NDVI_smooth)",
        "+ ",
        "  gc()",
        "+ ",
        "  ",
        "+ ",
        "  message('Acmulado NDVI..')",
        "+ ",
        "  cl <- makeCluster(11,\"SOCK\")",
        "+ ",
        "  eoscNDVI <- st_apply(esNDVI,1:2,cumRast,dates = dates, step = 16, get = c('eos',21),CLUSTER = cl,PROGRESS = TRUE,.fname = 'dates')",
        "+ ",
        "  stopCluster(cl)",
        "+ ",
        "  ",
        "+ ",
        "  eoscNDVI <- merge(split(eoscNDVI,'dates'),name='dates')",
        "+ ",
        "  ",
        "+ ",
        "  rm(esNDVI)",
        "+ ",
        "  gc()",
        "+ ",
        "  ",
        "+ ",
        "  # message('Obteniendo cNDVI en SOS..')",
        "+ ",
        "  # secNDVI <- c(c(sosC,eosC,along ='dates'),cNDVI,along='dates')",
        "+ ",
        "  # soscNDVI <- st_apply(secNDVI,1:2,getPerPixel,dates = dates, at='eos',lead=0,step = 16,CLUSTER = cl,PROGRESS = TRUE,.fname = 'dates')",
        "+ ",
        "  # soscNDVI <- merge(split(soscNDVI,'dates'),name='dates')",
        "+ ",
        "  # ",
        "+ ",
        "  # rm(secNDVI)",
        "+ ",
        "  # gc()",
        "+ ",
        "  ",
        "+ ",
        "  message('Scale cNDVI en SOS..')",
        "+ ",
        "  cl <- makeCluster(11,\"SOCK\")",
        "+ ",
        "  zcNDVI <- st_apply(eoscNDVI,1:2,function(x){scale(x)[,1]},CLUSTER = cl,PROGRESS = TRUE,.fname = 'zcNDVI')",
        "+ ",
        "  stopCluster(cl)",
        "+ ",
        "  zcNDVI <- merge(split(zcNDVI,'zcNDVI'),name='zcNDVI')",
        "+ ",
        "",
        "+ ",
        "  ",
        "+ ",
        "  saveRDS(zcNDVI,paste0('~/.starstemp/zcNDVI_',i,'.rds'))",
        "+ ",
        "  rm(zcNDVI)",
        "+ ",
        "  gc()",
        "+ ",
        "})",
        "Suavizado NDVI...\n",
        "\r  |                                                  | 0 % ~calculating  \r  |+                                                 | 1 % ~20s          \r  |+                                                 | 2 % ~19s          \r  |++                                                | 3 % ~17s          \r  |++                                                | 4 % ~18s          \r  |+++                                               | 5 % ~18s          \r  |+++                                               | 6 % ~18s          ",
        "\r  |++++                                              | 7 % ~17s          \r  |++++                                              | 8 % ~17s          \r  |+++++                                             | 9 % ~16s          \r  |+++++                                             | 10% ~16s          \r  |++++++                                            | 11% ~16s          \r  |++++++                                            | 12% ~16s          \r  |+++++++                                           | 13% ~16s          ",
        "\r  |+++++++                                           | 14% ~16s          \r  |++++++++                                          | 15% ~16s          \r  |++++++++                                          | 16% ~16s          \r  |+++++++++                                         | 17% ~16s          \r  |+++++++++                                         | 18% ~16s          \r  |++++++++++                                        | 19% ~16s          \r  |++++++++++                                        | 20% ~16s          ",
        "\r  |+++++++++++                                       | 21% ~15s          \r  |+++++++++++                                       | 22% ~15s          \r  |++++++++++++                                      | 23% ~15s          \r  |++++++++++++                                      | 24% ~15s          \r  |+++++++++++++                                     | 25% ~14s          \r  |+++++++++++++                                     | 26% ~14s          \r  |++++++++++++++                                    | 27% ~14s          ",
        "\r  |++++++++++++++                                    | 28% ~14s          \r  |+++++++++++++++                                   | 29% ~14s          \r  |+++++++++++++++                                   | 30% ~13s          \r  |++++++++++++++++                                  | 31% ~13s          \r  |++++++++++++++++                                  | 32% ~13s          \r  |+++++++++++++++++                                 | 33% ~13s          \r  |+++++++++++++++++                                 | 34% ~13s          ",
        "\r  |++++++++++++++++++                                | 35% ~13s          \r  |++++++++++++++++++                                | 36% ~13s          \r  |+++++++++++++++++++                               | 37% ~12s          \r  |+++++++++++++++++++                               | 38% ~12s          \r  |++++++++++++++++++++                              | 39% ~12s          \r  |++++++++++++++++++++                              | 40% ~12s          \r  |+++++++++++++++++++++                             | 41% ~12s          ",
        "\r  |+++++++++++++++++++++                             | 42% ~12s          \r  |++++++++++++++++++++++                            | 43% ~11s          \r  |++++++++++++++++++++++                            | 44% ~11s          \r  |+++++++++++++++++++++++                           | 45% ~11s          \r  |+++++++++++++++++++++++                           | 46% ~11s          \r  |++++++++++++++++++++++++                          | 47% ~11s          \r  |++++++++++++++++++++++++                          | 48% ~11s          ",
        "\r  |+++++++++++++++++++++++++                         | 49% ~10s          \r  |+++++++++++++++++++++++++                         | 50% ~10s          \r  |++++++++++++++++++++++++++                        | 51% ~10s          \r  |++++++++++++++++++++++++++                        | 52% ~10s          \r  |+++++++++++++++++++++++++++                       | 53% ~10s          \r  |+++++++++++++++++++++++++++                       | 54% ~09s          \r  |++++++++++++++++++++++++++++                      | 55% ~09s          ",
        "\r  |++++++++++++++++++++++++++++                      | 56% ~09s          \r  |+++++++++++++++++++++++++++++                     | 57% ~09s          \r  |+++++++++++++++++++++++++++++                     | 58% ~08s          \r  |++++++++++++++++++++++++++++++                    | 59% ~08s          \r  |++++++++++++++++++++++++++++++                    | 60% ~08s          \r  |+++++++++++++++++++++++++++++++                   | 61% ~08s          \r  |+++++++++++++++++++++++++++++++                   | 62% ~08s          ",
        "\r  |++++++++++++++++++++++++++++++++                  | 63% ~08s          \r  |++++++++++++++++++++++++++++++++                  | 64% ~07s          \r  |+++++++++++++++++++++++++++++++++                 | 65% ~07s          \r  |+++++++++++++++++++++++++++++++++                 | 66% ~07s          \r  |++++++++++++++++++++++++++++++++++                | 67% ~07s          \r  |++++++++++++++++++++++++++++++++++                | 68% ~07s          \r  |+++++++++++++++++++++++++++++++++++               | 69% ~06s          ",
        "\r  |+++++++++++++++++++++++++++++++++++               | 70% ~06s          \r  |++++++++++++++++++++++++++++++++++++              | 71% ~06s          \r  |++++++++++++++++++++++++++++++++++++              | 72% ~06s          \r  |+++++++++++++++++++++++++++++++++++++             | 73% ~06s          \r  |+++++++++++++++++++++++++++++++++++++             | 74% ~05s          \r  |++++++++++++++++++++++++++++++++++++++            | 75% ~05s          \r  |++++++++++++++++++++++++++++++++++++++            | 76% ~05s          ",
        "\r  |+++++++++++++++++++++++++++++++++++++++           | 77% ~05s          \r  |+++++++++++++++++++++++++++++++++++++++           | 78% ~05s          \r  |++++++++++++++++++++++++++++++++++++++++          | 79% ~04s          \r  |++++++++++++++++++++++++++++++++++++++++          | 80% ~04s          \r  |+++++++++++++++++++++++++++++++++++++++++         | 81% ~04s          \r  |+++++++++++++++++++++++++++++++++++++++++         | 82% ~04s          \r  |++++++++++++++++++++++++++++++++++++++++++        | 83% ~03s          ",
        "\r  |++++++++++++++++++++++++++++++++++++++++++        | 84% ~03s          \r  |+++++++++++++++++++++++++++++++++++++++++++       | 85% ~03s          \r  |+++++++++++++++++++++++++++++++++++++++++++       | 86% ~03s          \r  |++++++++++++++++++++++++++++++++++++++++++++      | 87% ~03s          \r  |++++++++++++++++++++++++++++++++++++++++++++      | 88% ~02s          \r  |+++++++++++++++++++++++++++++++++++++++++++++     | 89% ~02s          \r  |+++++++++++++++++++++++++++++++++++++++++++++     | 90% ~02s          ",
        "\r  |++++++++++++++++++++++++++++++++++++++++++++++    | 91% ~02s          \r  |++++++++++++++++++++++++++++++++++++++++++++++    | 92% ~02s          \r  |+++++++++++++++++++++++++++++++++++++++++++++++   | 93% ~01s          \r  |+++++++++++++++++++++++++++++++++++++++++++++++   | 94% ~01s          \r  |++++++++++++++++++++++++++++++++++++++++++++++++  | 95% ~01s          \r  |++++++++++++++++++++++++++++++++++++++++++++++++  | 96% ~01s          \r  |+++++++++++++++++++++++++++++++++++++++++++++++++ | 97% ~01s          ",
        "\r  |+++++++++++++++++++++++++++++++++++++++++++++++++ | 98% ~00s          \r  |++++++++++++++++++++++++++++++++++++++++++++++++++| 99% ~00s          \r  |++++++++++++++++++++++++++++++++++++++++++++++++++| 100% elapsed=20s  \n",
        "Acmulado NDVI..\n",
        "\r  |                                                  | 0 % ~calculating  \r  |+                                                 | 1 % ~01m 26s      \r  |+                                                 | 2 % ~01m 12s      \r  |++                                                | 3 % ~01m 07s      \r  |++                                                | 4 % ~01m 05s      \r  |+++                                               | 5 % ~01m 04s      \r  |+++                                               | 6 % ~01m 03s      ",
        "\r  |++++                                              | 7 % ~01m 02s      \r  |++++                                              | 8 % ~01m 02s      \r  |+++++                                             | 9 % ~01m 01s      \r  |+++++                                             | 10% ~01m 00s      \r  |++++++                                            | 11% ~59s          \r  |++++++                                            | 12% ~59s          \r  |+++++++                                           | 13% ~58s          ",
        "\r  |+++++++                                           | 14% ~58s          \r  |++++++++                                          | 15% ~57s          \r  |++++++++                                          | 16% ~57s          \r  |+++++++++                                         | 17% ~56s          \r  |+++++++++                                         | 18% ~55s          \r  |++++++++++                                        | 19% ~54s          \r  |++++++++++                                        | 20% ~53s          ",
        "\r  |+++++++++++                                       | 21% ~53s          \r  |+++++++++++                                       | 22% ~52s          \r  |++++++++++++                                      | 23% ~51s          \r  |++++++++++++                                      | 24% ~50s          \r  |+++++++++++++                                     | 25% ~50s          \r  |+++++++++++++                                     | 26% ~49s          \r  |++++++++++++++                                    | 27% ~48s          ",
        "\r  |++++++++++++++                                    | 28% ~47s          \r  |+++++++++++++++                                   | 29% ~46s          \r  |+++++++++++++++                                   | 30% ~46s          \r  |++++++++++++++++                                  | 31% ~45s          \r  |++++++++++++++++                                  | 32% ~44s          \r  |+++++++++++++++++                                 | 33% ~44s          \r  |+++++++++++++++++                                 | 34% ~43s          ",
        "\r  |++++++++++++++++++                                | 35% ~42s          \r  |++++++++++++++++++                                | 36% ~42s          \r  |+++++++++++++++++++                               | 37% ~41s          \r  |+++++++++++++++++++                               | 38% ~40s          \r  |++++++++++++++++++++                              | 39% ~40s          \r  |++++++++++++++++++++                              | 40% ~39s          \r  |+++++++++++++++++++++                             | 41% ~38s          ",
        "\r  |+++++++++++++++++++++                             | 42% ~37s          \r  |++++++++++++++++++++++                            | 43% ~37s          \r  |++++++++++++++++++++++                            | 44% ~36s          \r  |+++++++++++++++++++++++                           | 45% ~36s          \r  |+++++++++++++++++++++++                           | 46% ~35s          \r  |++++++++++++++++++++++++                          | 47% ~34s          \r  |++++++++++++++++++++++++                          | 48% ~34s          ",
        "\r  |+++++++++++++++++++++++++                         | 49% ~33s          \r  |+++++++++++++++++++++++++                         | 50% ~32s          \r  |++++++++++++++++++++++++++                        | 51% ~32s          \r  |++++++++++++++++++++++++++                        | 52% ~31s          \r  |+++++++++++++++++++++++++++                       | 53% ~30s          \r  |+++++++++++++++++++++++++++                       | 54% ~30s          \r  |++++++++++++++++++++++++++++                      | 55% ~29s          ",
        "\r  |++++++++++++++++++++++++++++                      | 56% ~28s          \r  |+++++++++++++++++++++++++++++                     | 57% ~28s          \r  |+++++++++++++++++++++++++++++                     | 58% ~27s          \r  |++++++++++++++++++++++++++++++                    | 59% ~26s          \r  |++++++++++++++++++++++++++++++                    | 60% ~26s          \r  |+++++++++++++++++++++++++++++++                   | 61% ~25s          \r  |+++++++++++++++++++++++++++++++                   | 62% ~24s          ",
        "\r  |++++++++++++++++++++++++++++++++                  | 63% ~24s          \r  |++++++++++++++++++++++++++++++++                  | 64% ~23s          \r  |+++++++++++++++++++++++++++++++++                 | 65% ~22s          \r  |+++++++++++++++++++++++++++++++++                 | 66% ~22s          \r  |++++++++++++++++++++++++++++++++++                | 67% ~21s          \r  |++++++++++++++++++++++++++++++++++                | 68% ~20s          \r  |+++++++++++++++++++++++++++++++++++               | 69% ~20s          ",
        "\r  |+++++++++++++++++++++++++++++++++++               | 70% ~19s          \r  |++++++++++++++++++++++++++++++++++++              | 71% ~18s          \r  |++++++++++++++++++++++++++++++++++++              | 72% ~18s          \r  |+++++++++++++++++++++++++++++++++++++             | 73% ~17s          \r  |+++++++++++++++++++++++++++++++++++++             | 74% ~17s          \r  |++++++++++++++++++++++++++++++++++++++            | 75% ~16s          \r  |++++++++++++++++++++++++++++++++++++++            | 76% ~15s          ",
        "\r  |+++++++++++++++++++++++++++++++++++++++           | 77% ~15s          \r  |+++++++++++++++++++++++++++++++++++++++           | 78% ~14s          \r  |++++++++++++++++++++++++++++++++++++++++          | 79% ~13s          \r  |++++++++++++++++++++++++++++++++++++++++          | 80% ~13s          \r  |+++++++++++++++++++++++++++++++++++++++++         | 81% ~12s          \r  |+++++++++++++++++++++++++++++++++++++++++         | 82% ~11s          \r  |++++++++++++++++++++++++++++++++++++++++++        | 83% ~11s          ",
        "\r  |++++++++++++++++++++++++++++++++++++++++++        | 84% ~10s          \r  |+++++++++++++++++++++++++++++++++++++++++++       | 85% ~10s          \r  |+++++++++++++++++++++++++++++++++++++++++++       | 86% ~09s          \r  |++++++++++++++++++++++++++++++++++++++++++++      | 87% ~08s          \r  |++++++++++++++++++++++++++++++++++++++++++++      | 88% ~08s          \r  |+++++++++++++++++++++++++++++++++++++++++++++     | 89% ~07s          \r  |+++++++++++++++++++++++++++++++++++++++++++++     | 90% ~06s          ",
        "\r  |++++++++++++++++++++++++++++++++++++++++++++++    | 91% ~06s          \r  |++++++++++++++++++++++++++++++++++++++++++++++    | 92% ~05s          \r  |+++++++++++++++++++++++++++++++++++++++++++++++   | 93% ~04s          \r  |+++++++++++++++++++++++++++++++++++++++++++++++   | 94% ~04s          \r  |++++++++++++++++++++++++++++++++++++++++++++++++  | 95% ~03s          \r  |++++++++++++++++++++++++++++++++++++++++++++++++  | 96% ~03s          \r  |+++++++++++++++++++++++++++++++++++++++++++++++++ | 97% ~02s          ",
        "\r  |+++++++++++++++++++++++++++++++++++++++++++++++++ | 98% ~01s          \r  |++++++++++++++++++++++++++++++++++++++++++++++++++| 99% ~01s          \r  |++++++++++++++++++++++++++++++++++++++++++++++++++| 100% elapsed=01m 03s\n",
        "Scale cNDVI en SOS..\n",
        "\r  |                                                  | 0 % ~calculating  \r  |+                                                 | 1 % ~41m 59s      ",
        "There were 50 or more warnings (use warnings() to see the first 50)",
        "\n",
        "\n",
        "> ",
        "\nRestarting R session...\n\n"
    ]
}